// initialization 
@256
D=A
@SP
A=M
M=D
@Sys.init
0;JEQ
// writeFunction Sys.init 0 
// writeLabel Sys.init 
(Sys.init)
// push constant 4000 
@4000
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0 
@SP
M=M-1
@SP
A=M
D=M
@THIS
M=D
// push constant 5000 
@5000
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 1 
@SP
M=M-1
@SP
A=M
D=M
@THAT
M=D
// writeCall Sys.main 0 
@Sys.main.return-address
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
// writeGoto Sys.main 
@Sys.main
0;JEQ
// writeLabel Sys.main.return-address 
(Sys.main.return-address)
// pop temp 1 
@SP
M=M-1
@SP
A=M
D=M
@R6
M=D
// writeLabel Sys.init.LOOP 
(Sys.init.LOOP)
// writeGoto Sys.init.LOOP 
@Sys.init.LOOP
0;JEQ
// writeFunction Sys.main 5 
// writeLabel Sys.main 
(Sys.main)
// push constant 0 
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 0 
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 0 
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 0 
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 0 
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// push constant 4001 
@4001
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0 
@SP
M=M-1
@SP
A=M
D=M
@THIS
M=D
// push constant 5001 
@5001
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 1 
@SP
M=M-1
@SP
A=M
D=M
@THAT
M=D
// push constant 200 
@200
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop local 1 
@SP
M=M-1
@SP
A=M
D=M
@LCL
A=M
A=A+1
M=D
// push constant 40 
@40
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop local 2 
@SP
M=M-1
@SP
A=M
D=M
@LCL
A=M
A=A+1
A=A+1
M=D
// push constant 6 
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop local 3 
@SP
M=M-1
@SP
A=M
D=M
@LCL
A=M
A=A+1
A=A+1
A=A+1
M=D
// push constant 123 
@123
D=A
@SP
A=M
M=D
@SP
M=M+1
// writeCall Sys.add12 1 
@Sys.add12.return-address
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@6
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
// writeGoto Sys.add12 
@Sys.add12
0;JEQ
// writeLabel Sys.add12.return-address 
(Sys.add12.return-address)
// pop temp 0 
@SP
M=M-1
@SP
A=M
D=M
@R5
M=D
// push local 0 
@LCL
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 1 
@LCL
A=M
A=A+1
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 2 
@LCL
A=M
A=A+1
A=A+1
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 3 
@LCL
A=M
A=A+1
A=A+1
A=A+1
D=M
@SP
A=M
M=D
@SP
M=M+1
// push local 4 
@LCL
A=M
A=A+1
A=A+1
A=A+1
A=A+1
D=M
@SP
A=M
M=D
@SP
M=M+1
// add 
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
M=D+M
@SP
M=M+1
// add 
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
M=D+M
@SP
M=M+1
// add 
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
M=D+M
@SP
M=M+1
// add 
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
M=D+M
@SP
M=M+1
// writeReturn 
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M
@1
D=D+A
@SP
M=D
@FRAME
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@FRAME
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@FRAME
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@FRAME
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@RET
A=M
0;JEQ
// writeFunction Sys.add12 0 
// writeLabel Sys.add12 
(Sys.add12)
// push constant 4002 
@4002
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 0 
@SP
M=M-1
@SP
A=M
D=M
@THIS
M=D
// push constant 5002 
@5002
D=A
@SP
A=M
M=D
@SP
M=M+1
// pop pointer 1 
@SP
M=M-1
@SP
A=M
D=M
@THAT
M=D
// push argument 0 
@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// push constant 12 
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
// add 
@SP
M=M-1
@SP
A=M
D=M
@SP
M=M-1
@SP
A=M
M=D+M
@SP
M=M+1
// writeReturn 
@LCL
D=M
@FRAME
M=D
@5
D=D-A
A=D
D=M
@RET
M=D
@SP
M=M-1
@SP
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M
@1
D=D+A
@SP
M=D
@FRAME
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@FRAME
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@FRAME
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@FRAME
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@RET
A=M
0;JEQ
(END)
@END
0;JEQ
